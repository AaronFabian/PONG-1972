{"mappings":"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","sources":["src/js/utils.js","src/js/script.js"],"sourcesContent":["export const getDistCirRec = function (circle, rect) {\r\n  let testX = circle.x;\r\n  let testY = circle.y;\r\n\r\n  if (circle.x < rect.x) {\r\n    testX = rect.x;\r\n  } else if (circle.x > rect.x + rect.width) {\r\n    testX = rect.x + rect.width;\r\n  }\r\n\r\n  if (circle.y < rect.y) {\r\n    testY = rect.y;\r\n  } else if (circle.y > rect.y + rect.height) {\r\n    testY = rect.y + rect.height;\r\n  }\r\n\r\n  const xDistance = circle.x - testX;\r\n  const yDistance = circle.y - testY;\r\n\r\n  const distance = Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2));\r\n\r\n  if (distance < circle.radius) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getDistance = function (x1, y1, x2, y2) {\r\n  const xDistance = x2 - x1;\r\n  const yDistance = y2 - y1;\r\n\r\n  return Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2));\r\n};\r\n","'use strict';\r\nimport { getDistCirRec } from './utils';\r\nimport { getDistance } from './utils';\r\n\r\nconst canvas = document.getElementById('canvas');\r\nconst button = document.getElementById('button--start');\r\nconst playerOneTouch = document.querySelector('.player--one--sp__container');\r\nconst playerTwoTouch = document.querySelector('.player--two--sp__container');\r\nconst playerOneEl = document.querySelector('.player-one');\r\nconst playerTwoEl = document.querySelector('.player-two');\r\nconst containerUI = document.querySelector('.container--UI');\r\n\r\n// setup\r\ncanvas.width = innerWidth;\r\ncanvas.height = innerHeight;\r\nlet isSmartPhone = false;\r\n\r\nconst c = canvas.getContext('2d');\r\n//////////////////////////////////\r\n//////////////////////////////////\r\nclass Ball {\r\n  constructor(x, y, radius, color) {\r\n    const randomX = canvas.width / 2 + radius + 5;\r\n    const randomY = canvas.height / 2 + radius - 5;\r\n    // const randomDx = (Math.random() - 0.5) * 10;\r\n    // const randomDy = Math.random() * 10;\r\n    const randValX = Math.random() - 0.5;\r\n    const randValY = Math.random() - 0.5;\r\n\r\n    this.x = randomX;\r\n    this.y = randomY;\r\n\r\n    if (isSmartPhone) {\r\n      this.dx = randValX < 0 ? -1.5 : 1.5; // X's velocity\r\n      this.dy = randValY < 0 ? -2 : 2; // Y's velocity\r\n    } else {\r\n      this.dx = randValX < 0 ? -3 : 3; // X's velocity\r\n      this.dy = randValY < 0 ? -3 : 3; // Y's velocity\r\n    }\r\n\r\n    this.radius = radius;\r\n    this.color = color;\r\n  }\r\n\r\n  draw() {\r\n    c.beginPath();\r\n    c.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    c.fillStyle = this.color;\r\n    c.fill();\r\n    // c.stroke();\r\n    c.closePath();\r\n  }\r\n\r\n  update(machineObj) {\r\n    const toggleEngine = () => {\r\n      runEngine = false;\r\n      isWrite = true;\r\n    };\r\n\r\n    if (isSmartPhone) {\r\n      if (this.y + this.radius >= canvas.height || this.y - this.radius <= 0) {\r\n        this.dy = -this.dy;\r\n        if (this.y + this.radius >= canvas.height) {\r\n          machineObj._score[0]++;\r\n          machineObj._renderSmartPhoneUI();\r\n          toggleEngine();\r\n        }\r\n        if (this.y - this.radius <= 0) {\r\n          machineObj._score[1]++;\r\n          machineObj._renderSmartPhoneUI();\r\n          toggleEngine();\r\n        }\r\n      } else if (\r\n        this.x - this.radius <= 0 ||\r\n        this.x + this.radius >= canvas.width\r\n      ) {\r\n        this.dx = -this.dx;\r\n      }\r\n    } else {\r\n      if (this.x + this.radius >= canvas.width || this.x - this.radius <= 0) {\r\n        this.dx = -this.dx;\r\n        if (this.x + this.radius >= canvas.width) {\r\n          machineObj._score[0]++;\r\n          machineObj._renderScore();\r\n          toggleEngine();\r\n        }\r\n        if (this.x - this.radius <= 0) {\r\n          machineObj._score[1]++;\r\n          machineObj._renderScore();\r\n          toggleEngine();\r\n        }\r\n      } else if (\r\n        this.y - this.radius <= 0 ||\r\n        this.y + this.radius >= canvas.height\r\n      ) {\r\n        this.dy = -this.dy;\r\n      }\r\n    }\r\n\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n\r\n    this.draw();\r\n  }\r\n}\r\n\r\nclass Player {\r\n  constructor(width, height, whichPlayer, color) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.color = color;\r\n    this.whichPlayer = whichPlayer;\r\n\r\n    if (isSmartPhone) {\r\n      if (whichPlayer === 1) {\r\n        this.x = canvas.width / 2 - this.width / 2;\r\n        this.y = canvas.height - 50;\r\n      } else if (whichPlayer === 2) {\r\n        this.x = canvas.width / 2 - this.width / 2;\r\n        this.y = 25;\r\n      }\r\n      // velocity\r\n      this.dx = 2;\r\n    } else {\r\n      if (whichPlayer === 1) {\r\n        this.x = canvas.width - 50;\r\n        this.y = canvas.height / 2 - this.height / 2;\r\n      } else if (whichPlayer === 2) {\r\n        this.x = 50;\r\n        this.y = canvas.height / 2 - this.height / 2;\r\n      }\r\n\r\n      // velocity\r\n      this.dy = 5;\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    c.beginPath();\r\n    c.fillStyle = this.color;\r\n    c.fillRect(this.x, this.y, this.width, this.height);\r\n    c.closePath();\r\n  }\r\n\r\n  update() {\r\n    if (isSmartPhone) {\r\n      // player 1\r\n      if (keyPad.i && this.x > 0 && this.whichPlayer === 1) {\r\n        this.x -= this.dx;\r\n        // ///////\r\n      }\r\n\r\n      if (\r\n        keyPad.k &&\r\n        this.x + this.width <= canvas.width &&\r\n        this.whichPlayer === 1\r\n      ) {\r\n        this.x += this.dx;\r\n      }\r\n\r\n      if (keyPad.w && this.x >= 0 && this.whichPlayer === 2) {\r\n        this.x -= this.dx;\r\n      }\r\n\r\n      // player 2\r\n      if (\r\n        keyPad.s &&\r\n        this.x + this.width <= canvas.width &&\r\n        this.whichPlayer === 2\r\n      ) {\r\n        this.x += this.dx;\r\n      }\r\n      ////////////////////////////////////////////////////////\r\n    } else {\r\n      // player 1\r\n      if (keyPad.i && this.y >= 0 && this.whichPlayer === 1) {\r\n        this.y -= this.dy;\r\n      }\r\n\r\n      if (\r\n        keyPad.k &&\r\n        this.y + this.height <= canvas.height &&\r\n        this.whichPlayer === 1\r\n      ) {\r\n        this.y += this.dy;\r\n      }\r\n\r\n      if (keyPad.w && this.y >= 0 && this.whichPlayer === 2) {\r\n        this.y -= this.dy;\r\n      }\r\n\r\n      // player 2\r\n      if (\r\n        keyPad.s &&\r\n        this.y + this.height <= canvas.height &&\r\n        this.whichPlayer === 2\r\n      ) {\r\n        this.y += this.dy;\r\n      }\r\n    }\r\n\r\n    this.draw();\r\n  }\r\n}\r\n\r\nclass Machine {\r\n  #scoreDisplay = document.querySelector('.player--container');\r\n  #nameDisplay = document.querySelector('.player--container__name');\r\n  #touchScreenUI = document.querySelector('.button--rendering');\r\n  #spUI = document.querySelector('.smartphone--info__screen');\r\n\r\n  _score = [0, 0];\r\n  #playerOne = playerOneEl;\r\n  #playerTwo = playerTwoEl;\r\n\r\n  #playerOneDefColor = 'blue';\r\n  #playerTwoDefColor = 'red';\r\n\r\n  #playerOneDefName = '-';\r\n  #playerTwoDefName = '-';\r\n\r\n  constructor() {\r\n    button.addEventListener('click', this.getDataPlayer.bind(this));\r\n\r\n    playerOneTouch.addEventListener('touchstart', e => {\r\n      e.preventDefault();\r\n      const p1Left = e.target.closest('.p1--left__btn');\r\n      const p2Right = e.target.closest('.p1--right__btn');\r\n\r\n      if (p1Left) {\r\n        keyPad.i = true;\r\n      }\r\n\r\n      if (p2Right) {\r\n        keyPad.k = true;\r\n      }\r\n    });\r\n\r\n    playerOneTouch.addEventListener('touchend', e => {\r\n      e.preventDefault();\r\n      const p1Left = e.target.closest('.p1--left__btn');\r\n      const p1Right = e.target.closest('.p1--right__btn');\r\n\r\n      if (p1Left) {\r\n        keyPad.i = false;\r\n      }\r\n\r\n      if (p1Right) {\r\n        keyPad.k = false;\r\n      }\r\n    });\r\n\r\n    playerTwoTouch.addEventListener('touchstart', e => {\r\n      e.preventDefault();\r\n      const p2Left = e.target.closest('.p2--left__btn');\r\n      const p2Right = e.target.closest('.p2--right__btn');\r\n\r\n      if (p2Left) {\r\n        keyPad.w = true;\r\n      }\r\n\r\n      if (p2Right) {\r\n        keyPad.s = true;\r\n      }\r\n    });\r\n\r\n    playerTwoTouch.addEventListener('touchend', e => {\r\n      e.preventDefault();\r\n      const p2Left = e.target.closest('.p2--left__btn');\r\n      const p2Right = e.target.closest('.p2--right__btn');\r\n\r\n      if (p2Left) {\r\n        keyPad.w = false;\r\n      }\r\n\r\n      if (p2Right) {\r\n        keyPad.s = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  _touchScreenButton() {\r\n    // playerOneTouch.addEventListener('touchstart', );\r\n  }\r\n\r\n  getDataPlayer(e) {\r\n    e.preventDefault();\r\n    const regexExp =\r\n      /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\r\n\r\n    // 01\r\n    this.playerOneName =\r\n      this.#playerOne.querySelector('.form--player-1 input').value ||\r\n      this.#playerOneDefName;\r\n\r\n    if (this.playerOneName.length > 6 || regexExp.test(this.playerOneName))\r\n      this.playerOneName = this.#playerOneDefName;\r\n\r\n    this.playerOneColor =\r\n      this.#playerOne.querySelector('.option-dropdown').value ||\r\n      this.#playerOneDefColor;\r\n\r\n    // 02\r\n    this.playerTwoName =\r\n      this.#playerTwo.querySelector('.form--player-2 input').value ||\r\n      this.#playerTwoDefName;\r\n\r\n    if (this.playerTwoName.length > 6 || regexExp.test(this.playerTwoName))\r\n      this.playerTwoName = this.#playerOneDefName;\r\n\r\n    this.playerTwoColor =\r\n      this.#playerTwo.querySelector('.option-dropdown').value ||\r\n      this.#playerTwoDefColor;\r\n\r\n    // game load\r\n    this.loadingGame();\r\n  }\r\n\r\n  loadingGame() {\r\n    containerUI.classList.add('active__game');\r\n\r\n    if (canvas.width <= 640) {\r\n      isSmartPhone = true;\r\n      this.#touchScreenUI.classList.toggle('active__game');\r\n      this.#spUI.classList.toggle('active__game');\r\n      spInit();\r\n    } else {\r\n      this._renderName();\r\n      init();\r\n    }\r\n    animate();\r\n  }\r\n\r\n  _renderName() {\r\n    this.#nameDisplay.innerHTML = '';\r\n    this.#nameDisplay.insertAdjacentHTML('afterbegin', this.nameUI());\r\n  }\r\n\r\n  _renderScore() {\r\n    this.#scoreDisplay.innerHTML = '';\r\n    this.#scoreDisplay.insertAdjacentHTML('afterbegin', this.scoreUI());\r\n  }\r\n\r\n  _renderTouchScreenUI() {\r\n    this.#touchScreenUI.innerHTML = '';\r\n    this.#touchScreenUI.insertAdjacentHTML('afterbegin', this.touchScreenUI());\r\n  }\r\n\r\n  _renderSmartPhoneUI() {\r\n    this.#spUI.innerHTML = '';\r\n    this.#spUI.insertAdjacentHTML('afterbegin', this.smartPhoneUI());\r\n  }\r\n\r\n  touchScreenUI() {\r\n    return `<div class=\"player--one--sp__container\">\r\n              <div class=\"left--btn\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke-width=\"1.5\"\r\n                  stroke=\"currentColor\"\r\n                  class=\"p1--left__btn\"\r\n                  width=\"30\"\r\n                >\r\n                  <path\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    d=\"M11.25 9l-3 3m0 0l3 3m-3-3h7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n\r\n              <div class=\"right--btn\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke-width=\"1.5\"\r\n                  stroke=\"currentColor\"\r\n                  width=\"30\"\r\n                  class=\"p1--right__btn\"\r\n                >\r\n                  <path\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    d=\"M12.75 15l3-3m0 0l-3-3m3 3h-7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"player--two--sp__container\">\r\n              <div class=\"left--btn\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke-width=\"1.5\"\r\n                  stroke=\"currentColor\"\r\n                  class=\"p2--left__btn\"\r\n                  width=\"30\"\r\n                >\r\n                  <path\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    d=\"M11.25 9l-3 3m0 0l3 3m-3-3h7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n\r\n              <div class=\"right--btn\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke-width=\"1.5\"\r\n                  stroke=\"currentColor\"\r\n                  width=\"30\"\r\n                  class=\"p2--right__btn\"\r\n                >\r\n                  <path\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    d=\"M12.75 15l3-3m0 0l-3-3m3 3h-7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </div>`;\r\n  }\r\n\r\n  scoreUI() {\r\n    return `\r\n    <div>\r\n      <p>Player 2</p>\r\n      <h6 class=\"player__two\">${this._score[0]}</h6>\r\n    </div>\r\n    <div>\r\n      <p>Player 1</p>\r\n      <h6 class=\"player__one\">${this._score[1]}</h6>\r\n    </div>\r\n    `;\r\n  }\r\n\r\n  nameUI() {\r\n    return `<div class=\"player--2__name\">\r\n              <p>${this.playerOneName}</p>\r\n            </div>\r\n            <small>Vs</small>\r\n            <div class=\"player--2__name\">\r\n              <p>${this.playerTwoName}</p>\r\n            </div>`;\r\n  }\r\n\r\n  smartPhoneUI() {\r\n    return `<div class=\"player--1__screen\">\r\n              <h4 class=\"player--1__name\">P2</h4>\r\n              <small class=\"player__nickname\">${this.playerTwoName}</small>\r\n              <span>-${this._score[1]}-</span>\r\n            </div>\r\n            <div class=\"player--2__screen\">\r\n              <h4 class=\"player--1__name\">P1</h4>\r\n              <small class=\"player__nickname\">${this.playerOneName}</small>\r\n              <span>-${this._score[0]}-</span>\r\n            </div>`;\r\n  }\r\n\r\n  machineCount(count) {\r\n    if (isSmartPhone) {\r\n      c.beginPath();\r\n      c.font = '32px serif';\r\n      c.strokeStyle = 'white';\r\n      if (count === 'Ready') {\r\n        c.strokeText(String(count), canvas.width / 2 - 35, canvas.height - 50);\r\n      } else {\r\n        c.strokeText(String(count), canvas.width / 2, canvas.height - 50);\r\n      }\r\n      c.closePath();\r\n    } else {\r\n      c.beginPath();\r\n      c.font = '48px serif';\r\n      c.strokeStyle = 'white';\r\n      if (count === 'Ready') {\r\n        c.strokeText(String(count), canvas.width / 2 - 40, canvas.height / 2);\r\n      } else {\r\n        c.strokeText(String(count), canvas.width / 2, canvas.height / 2);\r\n      }\r\n      c.closePath();\r\n    }\r\n  }\r\n}\r\n\r\n// function\r\nconst mouse = {\r\n  x: canvas.width / 2,\r\n  y: 870,\r\n};\r\n\r\nconst keyPad = {\r\n  w: false,\r\n  s: false,\r\n  i: false,\r\n  k: false,\r\n};\r\n\r\n// main engine\r\nlet ball = [];\r\nlet player;\r\nlet playerTwo;\r\nlet machine = new Machine();\r\n\r\nfunction init() {\r\n  ball = new Ball(100, 100, 10, 'white');\r\n  player = new Player(15, 175, 1, machine.playerOneColor);\r\n  playerTwo = new Player(15, 175, 2, machine.playerTwoColor);\r\n}\r\n\r\nfunction spInit() {\r\n  ball = new Ball(100, 100, 10, 'white');\r\n  player = new Player(80, 10, 1, machine.playerOneColor);\r\n  playerTwo = new Player(80, 10, 2, machine.playerTwoColor);\r\n}\r\n\r\nlet runEngine = false;\r\nlet isWrite = true;\r\nlet frame = 1;\r\nlet countDown = 0;\r\n\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  c.fillStyle = 'black';\r\n  c.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  if (runEngine) {\r\n    if (isSmartPhone) {\r\n      if (\r\n        getDistCirRec(ball, player) ||\r\n        player.height + ball.radius < ball.radius\r\n      ) {\r\n        ball.dy = -ball.dy;\r\n      }\r\n\r\n      if (\r\n        getDistCirRec(ball, playerTwo) ||\r\n        player.height + ball.radius < ball.radius\r\n      ) {\r\n        ball.dy = -ball.dy;\r\n      }\r\n    } else {\r\n      if (getDistCirRec(ball, player)) {\r\n        ball.dx = -ball.dx;\r\n      }\r\n\r\n      if (getDistCirRec(ball, playerTwo)) {\r\n        ball.dx = -ball.dx;\r\n      }\r\n    }\r\n    player.update();\r\n    playerTwo.update();\r\n    ball.update(machine);\r\n  }\r\n\r\n  if (frame % 150 === 0 && !runEngine) {\r\n    countDown++;\r\n    if (countDown === 4) {\r\n      runEngine = true;\r\n      isWrite = false;\r\n      countDown = 0;\r\n    }\r\n  }\r\n\r\n  if (isWrite) {\r\n    if (isSmartPhone) {\r\n      if (countDown === 0) {\r\n        machine.machineCount('Ready');\r\n        frame++;\r\n      } else {\r\n        machine.machineCount(countDown);\r\n        frame++;\r\n      }\r\n    } else {\r\n      if (countDown === 0) {\r\n        machine.machineCount('Ready');\r\n        frame++;\r\n      } else {\r\n        machine.machineCount(countDown);\r\n        frame++;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// controller\r\nwindow.addEventListener('keydown', ({ key }) => {\r\n  switch (key) {\r\n    case 'i':\r\n      keyPad.i = true;\r\n      break;\r\n    case 'k':\r\n      keyPad.k = true;\r\n      break;\r\n    case 'w':\r\n      keyPad.w = true;\r\n      break;\r\n    case 's':\r\n      keyPad.s = true;\r\n      break;\r\n  }\r\n});\r\n\r\nwindow.addEventListener('keyup', ({ key }) => {\r\n  switch (key) {\r\n    case 'i':\r\n      keyPad.i = false;\r\n      break;\r\n    case 'k':\r\n      keyPad.k = false;\r\n      break;\r\n    case 'w':\r\n      keyPad.w = false;\r\n      break;\r\n    case 's':\r\n      keyPad.s = false;\r\n      break;\r\n  }\r\n});\r\n\r\n// window.addEventListener('mousemove', ({ x, y }) => {\r\n//   mouse.x = x;\r\n//   mouse.y = y;\r\n// });\r\n\r\n///////////////////////////////\r\n//////////// garbage collection\r\n///////////////////////////////\r\n// function animate() {\r\n//   requestAnimationFrame(animate);\r\n//   c.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n//   if (\r\n//     getDistance(ball.x, ball.y, ball2.x, ball2.y) <=\r\n//     ball.radius + ball2.radius\r\n//   ) {\r\n//     if (ball2.color !== 'blue') {\r\n//       ball2.color = 'blue';\r\n//     } else {\r\n//       ball2.color = 'black';\r\n//     }\r\n//   }\r\n\r\n//   ball2.draw();\r\n//   ball.update();\r\n// }\r\n"],"names":["$a6df9c40ba402dc9$export$5e396b738472a8a6","circle","rect","testX","x","testY","y","width","height","xDistance","yDistance","Math","sqrt","pow","radius","$3fba0bda95caa784$var$canvas","document","getElementById","$3fba0bda95caa784$var$button","$3fba0bda95caa784$var$playerOneTouch","querySelector","$3fba0bda95caa784$var$playerTwoTouch","$3fba0bda95caa784$var$playerOneEl","$3fba0bda95caa784$var$playerTwoEl","$3fba0bda95caa784$var$containerUI","innerWidth","innerHeight","$3fba0bda95caa784$var$isSmartPhone","$3fba0bda95caa784$var$c","getContext","$3fba0bda95caa784$var$Ball","constructor","color","randomX","randomY","randValX","random","randValY","this","dx","dy","draw","beginPath","arc","PI","fillStyle","fill","closePath","update","machineObj","toggleEngine","$3fba0bda95caa784$var$runEngine","$3fba0bda95caa784$var$isWrite","_score","_renderSmartPhoneUI","_renderScore","$3fba0bda95caa784$var$Player","whichPlayer","fillRect","$3fba0bda95caa784$var$keyPad","i","k","w","s","$3fba0bda95caa784$var$player","$3fba0bda95caa784$var$playerTwo","$3fba0bda95caa784$var$ball","$3fba0bda95caa784$var$machine","scoreDisplay","nameDisplay","touchScreenUI","spUI","playerOne","playerTwo","playerOneDefColor","playerTwoDefColor","playerOneDefName","playerTwoDefName","addEventListener","getDataPlayer","bind","e","preventDefault","p1Left","target","closest","p2Right","p1Right","p2Left","_touchScreenButton","regexExp","playerOneName","value","length","test","playerOneColor","playerTwoName","playerTwoColor","loadingGame","classList","add","toggle","_renderName","$3fba0bda95caa784$var$animate","innerHTML","insertAdjacentHTML","nameUI","scoreUI","_renderTouchScreenUI","smartPhoneUI","count","font","strokeStyle","strokeText","String","$3fba0bda95caa784$var$frame"],"version":3,"file":"index.4eb5d34e.js.map"}