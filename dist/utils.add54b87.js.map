{"version":3,"sources":["utils.js"],"names":["getDistCirRec","circle","rect","testX","x","testY","y","width","height","xDistance","yDistance","distance","Math","sqrt","pow","radius","getDistance","x1","y1","x2","y2"],"mappings":";;;;;;;AAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,MAAV,EAAkBC,IAAlB,EAAwB;EACnD,IAAIC,KAAK,GAAGF,MAAM,CAACG,CAAnB;EACA,IAAIC,KAAK,GAAGJ,MAAM,CAACK,CAAnB;;EAEA,IAAIL,MAAM,CAACG,CAAP,GAAWF,IAAI,CAACE,CAApB,EAAuB;IACrBD,KAAK,GAAGD,IAAI,CAACE,CAAb;EACD,CAFD,MAEO,IAAIH,MAAM,CAACG,CAAP,GAAWF,IAAI,CAACE,CAAL,GAASF,IAAI,CAACK,KAA7B,EAAoC;IACzCJ,KAAK,GAAGD,IAAI,CAACE,CAAL,GAASF,IAAI,CAACK,KAAtB;EACD;;EAED,IAAIN,MAAM,CAACK,CAAP,GAAWJ,IAAI,CAACI,CAApB,EAAuB;IACrBD,KAAK,GAAGH,IAAI,CAACI,CAAb;EACD,CAFD,MAEO,IAAIL,MAAM,CAACK,CAAP,GAAWJ,IAAI,CAACI,CAAL,GAASJ,IAAI,CAACM,MAA7B,EAAqC;IAC1CH,KAAK,GAAGH,IAAI,CAACI,CAAL,GAASJ,IAAI,CAACM,MAAtB;EACD;;EAED,IAAMC,SAAS,GAAGR,MAAM,CAACG,CAAP,GAAWD,KAA7B;EACA,IAAMO,SAAS,GAAGT,MAAM,CAACK,CAAP,GAAWD,KAA7B;EAEA,IAAMM,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASL,SAAT,EAAoB,CAApB,IAAyBG,IAAI,CAACE,GAAL,CAASJ,SAAT,EAAoB,CAApB,CAAnC,CAAjB;;EAEA,IAAIC,QAAQ,GAAGV,MAAM,CAACc,MAAtB,EAA8B;IAC5B,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OAAO,KAAP;EACD;AACF,CA1BM;;;;AA4BA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAUC,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;EACnD,IAAMX,SAAS,GAAGU,EAAE,GAAGF,EAAvB;EACA,IAAMP,SAAS,GAAGU,EAAE,GAAGF,EAAvB;EAEA,OAAON,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASL,SAAT,EAAoB,CAApB,IAAyBG,IAAI,CAACE,GAAL,CAASJ,SAAT,EAAoB,CAApB,CAAnC,CAAP;AACD,CALM","file":"utils.add54b87.js","sourceRoot":"..","sourcesContent":["export const getDistCirRec = function (circle, rect) {\r\n  let testX = circle.x;\r\n  let testY = circle.y;\r\n\r\n  if (circle.x < rect.x) {\r\n    testX = rect.x;\r\n  } else if (circle.x > rect.x + rect.width) {\r\n    testX = rect.x + rect.width;\r\n  }\r\n\r\n  if (circle.y < rect.y) {\r\n    testY = rect.y;\r\n  } else if (circle.y > rect.y + rect.height) {\r\n    testY = rect.y + rect.height;\r\n  }\r\n\r\n  const xDistance = circle.x - testX;\r\n  const yDistance = circle.y - testY;\r\n\r\n  const distance = Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2));\r\n\r\n  if (distance < circle.radius) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getDistance = function (x1, y1, x2, y2) {\r\n  const xDistance = x2 - x1;\r\n  const yDistance = y2 - y1;\r\n\r\n  return Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2));\r\n};\r\n"]}